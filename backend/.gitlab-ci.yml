stages:
  - lint
  - test
  - upload
  - build
  - scan

include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

lint:
  image: gitlab.praktikum-services.ru:5050/zerodistance/momo-store/golangci-lint:latest
  stage: lint
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  cache:
    paths:
      - .go/pkg/mod/
  allow_failure: true
  script:
    - cd backend
    - golangci-lint run -v

test:
  image: gitlab.praktikum-services.ru:5050/zerodistance/momo-store/golang:latest
  stage: test
  script:
    - cd backend
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet  -json $(go list ./... | grep -v /vendor/) | tee vet-report.json
    - go test -race -coverprofile=coverage.out -json $(go list ./... | grep -v /vendor/) | tee test-report.json
  artifacts:
    when: always
    paths:
      - backend/vet-report.json
      - backend/test-report.json
      - backend/coverage.out
    expire_in: 1 hour

sonarqube-sast:
  stage: test
  image:
    name: gitlab.praktikum-services.ru:5050/zerodistance/momo-store/sonar-scanner-cli:latest
    entrypoint: [""]
  script:
    - cd backend
    - >
      sonar-scanner
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONT}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_FRONT}

build_code:
  image: gitlab.praktikum-services.ru:5050/zerodistance/momo-store/golang:latest
  stage: upload
  script:
    - cd backend
    - go build -o ./main ./cmd/api/
  artifacts:
    - backend/main
    expire_in: 1 hour

upload-to-nexus:
  stage: upload
  script:
    - cd backend
    - tar czf momo-store-backend-${VERSION}.tar.gz main
    - >       
      curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file momo-store-backend-${VERSION}.tar.gz ${NEXUS_REPO_FRONT_URL}/momo-store-backend/${VERSION}/momo-store-backend-${VERSION}.tar.gz
  only:
    changes:
      - backend/*
  needs:
    - build_code


build_image:
  when: manual
  stage: build
  image: gitlab.praktikum-services.ru:5050/zerodistance/momo-store/docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - set -x
    - cd backend
    - docker build -t $CI_REGISTRY_IMAGE/momo-store-backend:${VERSION} .
    - docker push $CI_REGISTRY_IMAGE/momo-store-backend:${VERSION}

security_scan:
  needs: 
    - job: build_image
  stage: scan
  image: 
    name: gitlab.praktikum-services.ru:5050/zerodistance/momo-store/docker:20.10.12-dind-rootless
  services:
    - docker:dind
  before_script:
    - until docker info; do sleep 1; done
  script:
    - docker run --rm -e TRIVY_USERNAME=$CI_REGISTRY_USER -e TRIVY_PASSWORD=$CI_REGISTRY_PASSWORD aquasec/trivy
      -q image --scanners vuln --severity HIGH,CRITICAL --output backend-scan-report.txt --no-progress
      $CI_REGISTRY_IMAGE/momo-store-backend:${VERSION} > backend-scan-report.txt
  artifacts:
    expire_in: 1 hour
    paths:
      - backend/backend-scan-report.txt
