stages:
  - test
  - build
  - scan

include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

build-for-test:
  image: gitlab.praktikum-services.ru:5050/zerodistance/momo-store/node:16.20.0-alpine3.17
  stage: test
  script:
    - set -x
    - cd frontend
    - npm install --progress=false
    - npm run build
  artifacts:
    expire_in: 1 hour
    paths:
      - frontend/dist

build-image:
  when: manual
  stage: build
  image: gitlab.praktikum-services.ru:5050/zerodistance/momo-store/docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - set -x
    - cd frontend
    - >
      docker build
      --tag $CI_REGISTRY_IMAGE/momo-store-frontend:${VERSION}
      .
    - docker push $CI_REGISTRY_IMAGE/momo-store-frontend:${VERSION}

security_scan:
  needs: build-image
    - job: 
  stage: scan
  image: 
    name: aquasec/trivy:latest
    entrypoint: [""]
  services:
    - docker:dind
  script:
    - trivy --quiet image
      --no-progress --severity HIGH,CRITICAL --scanners vuln --output scanning-report.txt
      $CI_REGISTRY_IMAGE/momo-store-frontend:${VERSION}
  artifacts:
    expire_in: 1 hour
    reports:
      container_scanning: scanning-report.txt
